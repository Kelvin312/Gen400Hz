
AVRASM ver. 2.1.30  D:\Сетевая\400Hz\400Рабочая\List\400Hz.asm Fri Oct 09 16:07:24 2015

D:\Сетевая\400Hz\400Рабочая\List\400Hz.asm(1029): warning: Register r3 already defined by the .DEF directive
D:\Сетевая\400Hz\400Рабочая\List\400Hz.asm(1030): warning: Register r2 already defined by the .DEF directive
D:\Сетевая\400Hz\400Рабочая\List\400Hz.asm(1031): warning: Register r5 already defined by the .DEF directive
D:\Сетевая\400Hz\400Рабочая\List\400Hz.asm(1032): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATtiny85
                 ;Program type             : Application
                 ;Clock frequency          : 8,000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 128 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATtiny85
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 607
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU GPIOR0=0x11
                 	.EQU GPIOR1=0x12
                 	.EQU GPIOR2=0x13
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x025F
                 	.EQU __DSTACK_SIZE=0x0080
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _swap=R3
                 	.DEF _imax=R2
                 	.DEF _onwait=R5
                 	.DEF _waitPause=R4
                 
                 ;GPIOR0-GPIOR2 INITIALIZATION VALUES
                 	.EQU __GPIOR0_INIT=0x00
                 	.EQU __GPIOR1_INIT=0x00
                 	.EQU __GPIOR2_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c014      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 c043      	RJMP _timer0_ovf_isr
000006 cff9      	RJMP 0x00
000007 c065      	RJMP _ana_comp_isr
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a c05c      	RJMP _timer0_compa_isr
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
                 
                 _0x17:
00000f 0000
000010 0000      	.DB  0x0,0x0,0x0,0x0
                 
                 __GLOBAL_INI_TBL:
000011 0004      	.DW  0x04
000012 0002      	.DW  0x02
000013 001e      	.DW  _0x17*2
                 
                 _0xFFFFFFFF:
000014 0000      	.DW  0
                 
                 __RESET:
000015 94f8      	CLI
000016 27ee      	CLR  R30
000017 bbec      	OUT  EECR,R30
000018 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000019 e1f8      	LDI  R31,0x18
00001a 95a8      	WDR
00001b b7a4      	IN   R26,MCUSR
00001c 7fa7      	CBR  R26,8
00001d bfa4      	OUT  MCUSR,R26
00001e bdf1      	OUT  WDTCR,R31
00001f bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000020 e08d      	LDI  R24,(14-2)+1
000021 e0a2      	LDI  R26,2
000022 27bb      	CLR  R27
                 __CLEAR_REG:
000023 93ed      	ST   X+,R30
000024 958a      	DEC  R24
000025 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000026 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000027 e092      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000028 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000029 93ed      	ST   X+,R30
00002a 9701      	SBIW R24,1
00002b f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00002c e2e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00002d e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00002e 9185      	LPM  R24,Z+
00002f 9195      	LPM  R25,Z+
000030 9700      	SBIW R24,0
000031 f061      	BREQ __GLOBAL_INI_END
000032 91a5      	LPM  R26,Z+
000033 91b5      	LPM  R27,Z+
000034 9005      	LPM  R0,Z+
000035 9015      	LPM  R1,Z+
000036 01bf      	MOVW R22,R30
000037 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000038 9005      	LPM  R0,Z+
000039 920d      	ST   X+,R0
00003a 9701      	SBIW R24,1
00003b f7e1      	BRNE __GLOBAL_INI_LOOP
00003c 01fb      	MOVW R30,R22
00003d cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0-GPIOR2 INITIALIZATION
00003e e0e0      	LDI  R30,__GPIOR0_INIT
00003f bbe1      	OUT  GPIOR0,R30
                 	;__GPIOR1_INIT = __GPIOR0_INIT
000040 bbe2      	OUT  GPIOR1,R30
                 	;__GPIOR2_INIT = __GPIOR0_INIT
000041 bbe3      	OUT  GPIOR2,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000042 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000043 bfed      	OUT  SPL,R30
000044 e0e2      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000045 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000046 eec0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000047 e0d0      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000048 c02e      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xE0
                 
                 	.CSEG
                 ;/*****************************************************
                 ;This program was produced by the
                 ;CodeWizardAVR V2.05.0 Professional
                 ;Automatic Program Generator
                 ;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 ;
                 ;Project :
                 ;Version :
                 ;Date    : 28.09.2015
                 ;Author  :
                 ;Company :
                 ;Comments:
                 ;
                 ;
                 ;Chip type               : ATtiny85
                 ;AVR Core Clock frequency: 8,000000 MHz
                 ;Memory model            : Small
                 ;External RAM size       : 0
                 ;Data Stack size         : 128
                 ;*****************************************************/
                 ;
                 ;#include <tiny85.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x18
                 	.EQU __sm_adc_noise_red=0x08
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_standby=0x18
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#define MAX_PAUSE 244
                 ;char swap = 0;
                 ;char imax = 0;
                 ;char onwait = 0;
                 ;char waitPause = 0;
                 ;
                 ;// Timer 0 overflow interrupt service routine
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 0020 {
                 
                 	.CSEG
                 _timer0_ovf_isr:
000049 d05d      	RCALL SUBOPT_0x0
                 ; 0000 0021     #asm("nop")
00004a 0000      	nop
                 ; 0000 0022     #asm("nop")
00004b 0000      	nop
                 ; 0000 0023     #asm("nop")
00004c 0000      	nop
                 ; 0000 0024 
                 ; 0000 0025     if(!imax)
00004d 2022      	TST  R2
00004e f439      	BRNE _0x3
                 ; 0000 0026     {
                 ; 0000 0027       if(swap)
00004f 2033      	TST  R3
000050 f019      	BREQ _0x4
                 ; 0000 0028       {
                 ; 0000 0029         PORTB.1 = 1;
000051 9ac1      	SBI  0x18,1
                 ; 0000 002A         PORTB.3 = 1;
000052 9ac3      	SBI  0x18,3
                 ; 0000 002B       }
                 ; 0000 002C       else
000053 c002      	RJMP _0x9
                 _0x4:
                 ; 0000 002D       {
                 ; 0000 002E         PORTB.0 = 1;
000054 9ac0      	SBI  0x18,0
                 ; 0000 002F         PORTB.2 = 1;
000055 9ac2      	SBI  0x18,2
                 ; 0000 0030       }
                 _0x9:
                 ; 0000 0031     }
                 ; 0000 0032     swap ^= 1;
                 _0x3:
000056 e0e1      	LDI  R30,LOW(1)
000057 263e      	EOR  R3,R30
                 ; 0000 0033     if(++waitPause > 10 && OCR0A < MAX_PAUSE){ OCR0A++;  waitPause = 0;}
000058 9443      	INC  R4
000059 e0ea      	LDI  R30,LOW(10)
00005a 15e4      	CP   R30,R4
00005b f418      	BRSH _0xF
00005c b5e9      	IN   R30,0x29
00005d 3fe4      	CPI  R30,LOW(0xF4)
00005e f008      	BRLO _0x10
                 _0xF:
00005f c004      	RJMP _0xE
                 _0x10:
000060 b5e9      	IN   R30,0x29
000061 5fef      	SUBI R30,-LOW(1)
000062 bde9      	OUT  0x29,R30
000063 2444      	CLR  R4
                 ; 0000 0034     // Reinitialize Timer 0 value
                 ; 0000 0035     TCNT0=0x64;   //Частота
                 _0xE:
000064 e6e4      	LDI  R30,LOW(100)
000065 bfe2      	OUT  0x32,R30
                 ; 0000 0036 }
000066 c00c      	RJMP _0x16
                 ;
                 ;// Timer 0 output compare A interrupt service routine
                 ;interrupt [TIM0_COMPA] void timer0_compa_isr(void)
                 ; 0000 003A {
                 _timer0_compa_isr:
000067 d03f      	RCALL SUBOPT_0x0
                 ; 0000 003B     PORTB &= 0xF0;
000068 b3e8      	IN   R30,0x18
000069 7fe0      	ANDI R30,LOW(0xF0)
00006a bbe8      	OUT  0x18,R30
                 ; 0000 003C     #asm("wdr")
00006b 95a8      	wdr
                 ; 0000 003D }
00006c c006      	RJMP _0x16
                 ;
                 ;// Analog Comparator interrupt service routine
                 ;interrupt [ANA_COMP] void ana_comp_isr(void)
                 ; 0000 0041 {
                 _ana_comp_isr:
00006d d039      	RCALL SUBOPT_0x0
                 ; 0000 0042     if(OCR0A > 0x80) imax = 1;
00006e b5e9      	IN   R30,0x29
00006f 38e1      	CPI  R30,LOW(0x81)
000070 f010      	BRLO _0x11
000071 e0e1      	LDI  R30,LOW(1)
000072 2e2e      	MOV  R2,R30
                 ; 0000 0043     //PORTB &= 0xF0;
                 ; 0000 0044 }
                 _0x11:
                 _0x16:
000073 91e9      	LD   R30,Y+
000074 bfef      	OUT  SREG,R30
000075 91e9      	LD   R30,Y+
000076 9518      	RETI
                 ;
                 ;// Declare your global variables here
                 ;
                 ;void main(void)
                 ; 0000 0049 {
                 _main:
                 ; 0000 004A // Declare your local variables here
                 ; 0000 004B 
                 ; 0000 004C // Crystal Oscillator division factor: 1
                 ; 0000 004D #pragma optsize-
                 ; 0000 004E CLKPR=0x80;
000077 e8e0      	LDI  R30,LOW(128)
000078 bde6      	OUT  0x26,R30
                 ; 0000 004F CLKPR=0x00;
000079 e0e0      	LDI  R30,LOW(0)
00007a bde6      	OUT  0x26,R30
                 ; 0000 0050 #ifdef _OPTIMIZE_SIZE_
                 ; 0000 0051 #pragma optsize+
                 ; 0000 0052 #endif
                 ; 0000 0053 
                 ; 0000 0054 // Input/Output Ports initialization
                 ; 0000 0055 // Port B initialization
                 ; 0000 0056 // Func5=In Func4=In Func3=Out Func2=Out Func1=Out Func0=Out
                 ; 0000 0057 // State5=T State4=T State3=0 State2=0 State1=0 State0=0
                 ; 0000 0058 PORTB=0x00;
00007b bbe8      	OUT  0x18,R30
                 ; 0000 0059 DDRB=0x0F;
00007c e0ef      	LDI  R30,LOW(15)
00007d bbe7      	OUT  0x17,R30
                 ; 0000 005A 
                 ; 0000 005B // Timer/Counter 0 initialization
                 ; 0000 005C // Clock source: System Clock
                 ; 0000 005D // Clock value: 125,000 kHz
                 ; 0000 005E // Mode: Normal top=0xFF
                 ; 0000 005F // OC0A output: Disconnected
                 ; 0000 0060 // OC0B output: Disconnected
                 ; 0000 0061 TCCR0A=0x00;
00007e e0e0      	LDI  R30,LOW(0)
00007f bdea      	OUT  0x2A,R30
                 ; 0000 0062 TCCR0B=0x03;
000080 e0e3      	LDI  R30,LOW(3)
000081 bfe3      	OUT  0x33,R30
                 ; 0000 0063 TCNT0=0x64;
000082 e6e4      	LDI  R30,LOW(100)
000083 bfe2      	OUT  0x32,R30
                 ; 0000 0064 OCR0A=0x66; //Пауза
000084 e6e6      	LDI  R30,LOW(102)
000085 bde9      	OUT  0x29,R30
                 ; 0000 0065 OCR0B=0x00;
000086 e0e0      	LDI  R30,LOW(0)
000087 bde8      	OUT  0x28,R30
                 ; 0000 0066 
                 ; 0000 0067 // Timer/Counter 1 initialization
                 ; 0000 0068 // Clock source: System Clock
                 ; 0000 0069 // Clock value: Timer1 Stopped
                 ; 0000 006A // Mode: Normal top=0xFF
                 ; 0000 006B // OC1A output: Disconnected
                 ; 0000 006C // OC1B output: Disconnected
                 ; 0000 006D // Timer1 Overflow Interrupt: Off
                 ; 0000 006E // Compare A Match Interrupt: Off
                 ; 0000 006F // Compare B Match Interrupt: Off
                 ; 0000 0070 PLLCSR=0x00;
000088 bde7      	OUT  0x27,R30
                 ; 0000 0071 
                 ; 0000 0072 TCCR1=0x00;
000089 bfe0      	OUT  0x30,R30
                 ; 0000 0073 GTCCR=0x00;
00008a bdec      	OUT  0x2C,R30
                 ; 0000 0074 TCNT1=0x00;
00008b bdef      	OUT  0x2F,R30
                 ; 0000 0075 OCR1A=0x00;
00008c bdee      	OUT  0x2E,R30
                 ; 0000 0076 OCR1B=0x00;
00008d bdeb      	OUT  0x2B,R30
                 ; 0000 0077 OCR1C=0x00;
00008e bded      	OUT  0x2D,R30
                 ; 0000 0078 
                 ; 0000 0079 // External Interrupt(s) initialization
                 ; 0000 007A // INT0: Off
                 ; 0000 007B // Interrupt on any change on pins PCINT0-5: Off
                 ; 0000 007C GIMSK=0x00;
00008f bfeb      	OUT  0x3B,R30
                 ; 0000 007D MCUCR=0x00;
000090 bfe5      	OUT  0x35,R30
                 ; 0000 007E 
                 ; 0000 007F // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0080 TIMSK=0x12;
000091 e1e2      	LDI  R30,LOW(18)
000092 bfe9      	OUT  0x39,R30
                 ; 0000 0081 
                 ; 0000 0082 // Universal Serial Interface initialization
                 ; 0000 0083 // Mode: Disabled
                 ; 0000 0084 // Clock source: Register & Counter=no clk.
                 ; 0000 0085 // USI Counter Overflow Interrupt: Off
                 ; 0000 0086 USICR=0x00;
000093 e0e0      	LDI  R30,LOW(0)
000094 b9ed      	OUT  0xD,R30
                 ; 0000 0087 
                 ; 0000 0088 // Analog Comparator initialization
                 ; 0000 0089 // Analog Comparator: On
                 ; 0000 008A // The Analog Comparator's positive input is
                 ; 0000 008B // connected to the Bandgap Voltage Reference
                 ; 0000 008C // The Analog Comparator's negative input is
                 ; 0000 008D // connected to the ADC multiplexer
                 ; 0000 008E // Interrupt on Falling Output Edge
                 ; 0000 008F ACSR=0x4A;
000095 e4ea      	LDI  R30,LOW(74)
000096 b9e8      	OUT  0x8,R30
                 ; 0000 0090 ADCSRB=0x40;
000097 e4e0      	LDI  R30,LOW(64)
000098 b9e3      	OUT  0x3,R30
                 ; 0000 0091 ADMUX=0x02;
000099 e0e2      	LDI  R30,LOW(2)
00009a b9e7      	OUT  0x7,R30
                 ; 0000 0092 // Digital input buffer on AIN0: Off
                 ; 0000 0093 // Digital input buffer on AIN1: Off
                 ; 0000 0094 // Digital input buffers on ADC0: On, ADC1: On, ADC2: Off, ADC3: On
                 ; 0000 0095 DIDR0=0x10;
00009b e1e0      	LDI  R30,LOW(16)
00009c bbe4      	OUT  0x14,R30
                 ; 0000 0096 
                 ; 0000 0097 // ADC initialization
                 ; 0000 0098 // ADC disabled
                 ; 0000 0099 ADCSRA=0x00;
00009d e0e0      	LDI  R30,LOW(0)
00009e b9e6      	OUT  0x6,R30
                 ; 0000 009A 
                 ; 0000 009B // Watchdog Timer initialization
                 ; 0000 009C // Watchdog Timer Prescaler: OSC/1024k
                 ; 0000 009D // Watchdog Timer interrupt: Off
                 ; 0000 009E #pragma optsize-
                 ; 0000 009F #asm("wdr")
00009f 95a8      	wdr
                 ; 0000 00A0 WDTCR=0x39;
0000a0 e3e9      	LDI  R30,LOW(57)
0000a1 bde1      	OUT  0x21,R30
                 ; 0000 00A1 WDTCR=0x29;
0000a2 e2e9      	LDI  R30,LOW(41)
0000a3 bde1      	OUT  0x21,R30
                 ; 0000 00A2 #ifdef _OPTIMIZE_SIZE_
                 ; 0000 00A3 #pragma optsize+
                 ; 0000 00A4 #endif
                 ; 0000 00A5 
                 ; 0000 00A6 // Global enable interrupts
                 ; 0000 00A7 #asm("sei")
0000a4 9478      	sei
                 ; 0000 00A8 
                 ; 0000 00A9 while (1)
                 _0x12:
                 ; 0000 00AA       {
                 ; 0000 00AB       // Place your code here
                 ; 0000 00AC 
                 ; 0000 00AD       }
0000a5 cfff      	RJMP _0x12
                 ; 0000 00AE }
                 _0x15:
0000a6 cfff      	RJMP _0x15
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x0:
0000a7 93ea      	ST   -Y,R30
0000a8 b7ef      	IN   R30,SREG
0000a9 93ea      	ST   -Y,R30
0000aa 9508      	RET
                 
                 
                 	.CSEG
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATtiny85 register use summary:
r0 :   4 r1 :   1 r2 :   2 r3 :   2 r4 :   3 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   0 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   0 
r24:   7 r25:   2 r26:   6 r27:   2 r28:   1 r29:   1 r30:  86 r31:   3 
x  :   3 y  :   4 z  :   7 
Registers used: 17 out of 35 (48.6%)

ATtiny85 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   0 
adiw  :   0 and   :   0 andi  :   1 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   2 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   2 
brlt  :   0 brmi  :   0 brne  :   4 brpl  :   0 brsh  :   1 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 cbi   :   0 
cbr   :   1 clc   :   0 clh   :   0 cli   :   1 cln   :   0 clr   :   3 
cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 cp    :   1 
cpc   :   0 cpi   :   2 cpse  :   0 dec   :   1 des   :   0 eor   :   1 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   6 
inc   :   1 ld    :   2 ldd   :   0 ldi   :  34 lds   :   0 lpm   :   7 
lsl   :   0 lsr   :   0 mov   :   1 movw  :   3 mul   :   0 muls  :   0 
mulsu :   0 neg   :   0 nop   :   3 or    :   0 ori   :   0 out   :  41 
pop   :   0 push  :   0 rcall :   3 ret   :   1 reti  :   1 rjmp  :  23 
rol   :   0 ror   :   0 sbc   :   0 sbci  :   0 sbi   :   4 sbic  :   0 
sbis  :   0 sbiw  :   3 sbr   :   0 sbrc  :   0 sbrs  :   0 sec   :   0 
seh   :   0 sei   :   1 sen   :   0 ser   :   0 ses   :   0 set   :   0 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :   5 std   :   0 
sts   :   0 sub   :   0 subi  :   1 swap  :   0 tst   :   2 wdr   :   3 

Instructions used: 32 out of 114 (28.1%)

ATtiny85 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000156    330     12    342    8192   4.2%
[.dseg] 0x000060 0x0000e0      0      0      0     607   0.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
